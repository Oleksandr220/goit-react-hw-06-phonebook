{"version":3,"sources":["redux/actions.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","components/Conteiner/Conteiner.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","payload","name","number","id","shortid","generate","deleteContact","filterContact","Form","addContacts","useState","setName","setNumber","nameInputId","numberInputId","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","className","htmlFor","type","onChange","pattern","title","Filter","ContactsList","users","ondeleteContact","map","onClick","Conteiner","children","App","contacts","useSelector","state","filter","dispatch","useDispatch","normalizedFilter","toLocaleLowerCase","visibleContacts","contact","includes","data","console","log","some","alert","actions","length","event","eventId","createReducer","action","element","combineReducers","store","configureStore","reducer","contactsReduser","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a7b04a8.chunk.js","sourcesContent":["import shortid from \"shortid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"addContact\", ({ name, number }) => {\n  return {\n    payload: {\n      name,\n      number,\n      id: shortid.generate(),\n    },\n  };\n});\n\nconst deleteContact = createAction(\"deleteContact\");\nconst filterContact = createAction(\"filterContact\");\n\nexport { addContact, deleteContact, filterContact };\n","import { useState } from \"react\";\nimport \"./Form.css\";\nimport shortid from \"shortid\";\n\nfunction Form({ addContacts }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addContacts({ name, number });\n    reset();\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    if (name === \"name\") {\n      setName(value);\n    }\n    if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const reset = (e) => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label htmlFor={nameInputId} className=\"form__label\">\n        Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        className=\"form__input\"\n        id={nameInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer и т. п.\"\n      ></input>\n      <label htmlFor={numberInputId} className=\"form__label\">\n        Number\n      </label>\n      <input\n        type=\"phone\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        className=\"form__input\"\n        id={numberInputId}\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n      ></input>\n      <button type=\"submit\" className=\"form__button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./Filter.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <label>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          className=\"filter__input\"\n        ></input>\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport \"./ContactList.css\";\n\nconst ContactsList = ({ users, ondeleteContact }) => (\n  <ul className=\"contactList__list\">\n    {users.map(({ id, name, number }) => (\n      <li key={id} className=\"contactList__item\">\n        <span className=\"contactList__text\">{name}:</span>\n        <span className=\"contactList__text\">{number}</span>\n        <button\n          className=\"contactList__button\"\n          onClick={() => ondeleteContact(id)}\n        >\n          Delete contact\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactsList;\n","import React from \"react\";\nimport \"./Conteiner.css\";\nimport PropTypes from \"prop-types\";\n\nconst Conteiner = ({ title, children }) => {\n  return (\n    <div className=\"conteiner\">\n      <h2 className=\"conteiner__title\">{title}</h2>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nConteiner.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Conteiner;\n","import \"./App.css\";\nimport React from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"./redux/actions\";\n\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Conteiner from \"./components/Conteiner/Conteiner\";\nimport shortid from \"shortid\";\n\nfunction App() {\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  // useEffect(\n  //   (prevState) => {\n  //     console.log(contacts);\n  //     if (contacts !== prevState) {\n  //       localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  //     }\n  //   },\n  //   [contacts]\n  // );\n\n  // useEffect(() => {\n  //   const localContacts = localStorage.getItem(\"contacts\");\n  //   const parsedLocalContacts = JSON.parse(localContacts);\n  //   // console.log(parsedLocalContacts);\n  //   // if (parsedLocalContacts) {\n  //   //   dispatch(actions.addContact(parsedLocalContacts));\n  //   // }\n  // }, []);\n\n  const addContacts = (data) => {\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n    console.log(data);\n\n    const inIsContact = (e) => {\n      return contact.name === e.name;\n    };\n    if (data.name === \"\" || data.number === \"\") {\n      alert(\"Please make a correct contact\");\n      return;\n    }\n    if (contacts.some(inIsContact)) {\n      alert(`${data.name} is already in contacts`);\n    } else dispatch(actions.addContact(contact));\n  };\n\n  const deleteContact = (eventId) => {\n    dispatch(actions.deleteContact(eventId));\n  };\n\n  const changeFilter = (event) => {\n    dispatch(actions.filterContact(event.currentTarget.value));\n  };\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  const visibleContacts = contacts.filter(\n    (contact) =>\n      contact.name.includes(normalizedFilter) ||\n      contact.number.includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <Conteiner title=\"Phonebook\">\n        <Form addContacts={addContacts} />\n      </Conteiner>\n      <Conteiner title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <>\n            <Filter value={filter} onChange={changeFilter} />\n            <ContactsList\n              users={visibleContacts}\n              ondeleteContact={deleteContact}\n            />\n          </>\n        ) : (\n          <span className=\"contact-message\">\n            You have not contacts yet, please add contact to phoneboock\n          </span>\n        )}\n      </Conteiner>\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, filterContact } from \"./actions\";\n\nconst contacts = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter((element) => element.id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReduser from \"./reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n});\n\nexport { store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}